<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
    xmlns:sec="http://www.springframework.org/schema/security"

    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        https://www.springframework.org/schema/security/spring-security.xsd">

<!--    <sec:http pattern="/public/**" security="none" />-->

<!--    <sec:http pattern="/**" create-session="ifRequired" entry-point-ref="delegatingAuthenticationEntryPoint"-->
<!--        access-decision-manager-ref="accessDecisionManager" authentication-manager-ref="authenticationManager">-->
<!--        <sec:anonymous enabled="true" />-->
<!--        <sec:http-basic />-->
<!--        <sec:intercept-url pattern="/**"-->
<!--            access="#oauth2.hasAnyScope()" method="GET" />-->
<!--        <sec:intercept-url pattern="/**"-->
<!--            access="#oauth2.hasAnyScope('cloud_controller.write', 'cloud_controller.admin')" method="PUT" />-->
<!--        <sec:intercept-url pattern="/**"-->
<!--            access="#oauth2.hasAnyScope('cloud_controller.write', 'cloud_controller.admin')" method="POST" />-->
<!--        <sec:intercept-url pattern="/**"-->
<!--            access="#oauth2.hasAnyScope('cloud_controller.write', 'cloud_controller.admin')" method="DELETE" />-->
<!--        <sec:access-denied-handler ref="accessDeniedHandler" />-->

<!--        <sec:custom-filter ref="customTokenServices" before="PRE_AUTH_FILTER" />-->
<!--        <sec:custom-filter ref="requestSizeFilter" after="PRE_AUTH_FILTER" />-->
<!--        <sec:custom-filter ref="csrfHeadersFilter" after="CSRF_FILTER" />-->
<!--        <sec:custom-filter ref="compositeUriAuthorizationFilter" position="LAST" />-->
<!--    </sec:http>-->

    <sec:http-firewall ref="customHttpFirewall" />

<!--    <bean class="org.springframework.security.web.access.expression.WebExpressionVoter">-->
<!--        <property name="expressionHandler" ref="oauthWebExpressionHandler" />-->
<!--    </bean>-->

<!--    <oauth:web-expression-handler id="oauthWebExpressionHandler" />-->

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="customAuthenticationProvider" />
    </sec:authentication-manager>

</beans>
